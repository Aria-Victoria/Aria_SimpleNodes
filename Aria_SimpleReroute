#A simple stacked reroute node for making Streets/Highways/Pipes. Whatever you want to call them.
#A Model input is required. No other node has to be filled.
#Uploaded on 10/18/2023
#Currently WIP

class Aria_SimpleReroute:
    def __init__(self):
        pass
    @classmethod
    def INPUT_TYPES(s):
        return {"required": {
        },
        "optional": {
            "model_opt": ("MODEL",),
            "clip_opt": ("CLIP",),
            "vae_opt": ("VAE",),
            "positive_opt": ("CONDITIONING",),
            "negative_opt": ("CONDITIONING",),
            "latent_opt": ("LATENT",),
            "image_opt": ("IMAGE",),
            "int_opt": ("INT", {}),
        }}
    RETURN_TYPES = ("MODEL", "CLIP", "VAE", "CONDITIONING", "CONDITIONING", "LATENT", "IMAGE", "INT") 
    RETURN_NAMES = ("model_opt", "clip_opt", "vae_opt", "positive_opt", "negative_opt", "latent_opt", "image_opt", "int_opt")
    FUNCTION = "A_Run"
    CATEGORY = "Aria"

    def A_Run(self, **kwargs):
        return kwargs.get('model_opt', None), kwargs.get('clip_opt', None), kwargs.get('vae_opt', None), kwargs.get('positive_opt', None), kwargs.get('negative_opt', None), kwargs.get('latent_opt', None), kwargs.get('image_opt', None), kwargs.get('int_opt', None)
    
NODE_CLASS_MAPPINGS = {
    "Aria_SimpleReroute": Aria_SimpleReroute
}
NODE_DISPLAY_NAME_MAPPINGS = {
    "Aria_SimpleReroute": "Simple Reroute"
}
